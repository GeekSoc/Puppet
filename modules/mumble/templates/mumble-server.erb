# To enable username registration through
# http://webserver/cgi-bin/mumble-server/register.cgi
# then this value must be set to a valid email
# and you must be running a SMTP server on this
# machine.
#emailfrom =

# How many login attempts do we tolerate from one IP
# inside a given timeframe before we ban the connection?
# Note that this is global (shared between all virtual servers), and that
# it counts both successfull and unsuccessfull connection attempts.
# Set either Attempts or Timeframe to 0 to disable.
#autobanAttempts = 10
#autobanTimeframe = 120
#autobanTime = 300

# The below will be used as defaults for new configured servers.
# If you're just running one server (the default), it's easier to
# configure it here than through DBus/SQL.
#
# Welcome message sent to users
welcometext="<br />Welcome to this server running <b>Murmur</b>.<br />Enjoy your stay!<br />"

# Port to bind TCP and UDP sockets to
port=<%= scope.lookupvar('mumble::port') %>

# Specific IP or hostname to bind to.
# If this is left blank (default), murmur will bind to all available addresses.
#host=

# Password to join server
serverpassword=<%= scope.lookupvar('mumble::password') %>

# Maximum bandwidth (in bytes per second) clients are allowed
# send speech at.
bandwidth=<%= scope.lookupvar('mumble::bandwidth') %>

# Maximum number of concurrent clients allowed.
users=100

# Murmur retains the per-server log entries in an internal database which
# allows it to be accessed over D-Bus.
# How many days should such entries be kept?
#logdays=31

# To enable public registration, the serverpassword must be blank, and this
# must all be filled out.
# The password here is used to create a registry for the server name; subsequent
# updates will need the same password. Don't loose your password.
# The URL is your own website, and only set the registerHostname for static IP
# addresses.
#
#registerName=Mumble Server
#registerPassword=secret
#registerUrl=http://mumble.sourceforge.net/
#registerHostname=

# If you have a proper SSL certificate, you can provide the filenames here.
#sslCert=
#sslKey=

# Path to database. If blank, will search for
# murmur.sqlite in default locations.
database=/var/lib/mumble-server/mumble-server.sqlite

# PIDfile to use
# Leave blank to place pidfile in current directory
pidfile=/var/run/mumble-server/mumble-server.pid

# Murmur defaults to not using D-Bus. If you wish to use dbus, please
# specify so here.
<% if scope.lookupvar('mumble::dbus') == true -%>
dbus=system
<% else -%>
#dbus=system
<% end -%>

# If you want to use ZeroC ICE to communicate with Murmur, you need
# to specify the endpoint to use. Since there is no authentication
# with ICE, you should only use it if you trust all the users who have
# shell access to your machine.
# Please see the ICE documentation on how to specify endpoints.
<% if scope.lookupvar('mumble::ice') == true -%>
ice="tcp -h 127.0.0.1 -p 6502"
<% else -%>
#ice="tcp -h 127.0.0.1 -p 6502"
<% end -%>

# Murmur default to logging to murmur.log. If you leave this blank,
# murmur will log to the console (linux) or through message boxes (win32).
logfile=/var/log/mumble-server/mumble-server.log
